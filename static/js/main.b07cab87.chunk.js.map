{"version":3,"sources":["serviceWorker.js","tools/info.js","controllers/app/daterange.js","controllers/redux/slices/date.js","tools/date.js","controllers/services/fetch.js","controllers/redux/slices/value.js","controllers/redux/slices/basic.js","controllers/redux/store.js","styles/colors.js","components/layout/header.jsx","tools/id.js","components/dateInput.jsx","components/valueChart.jsx","tools/marketvalue.js","tools/tradingvolume.js","tools/deepvalueanalytics.js","components/insight.jsx","components/layout/content.jsx","components/layout/footer.jsx","styles/theme.js","components/layout.jsx","index.js"],"names":["Boolean","window","location","hostname","match","APPID","appid","getDRStart","JSON","parse","localStorage","getItem","getDREnd","dateSlice","createSlice","name","initialState","daterange_start","daterange_end","reducers","SET_DATERANGE_START","state","action","payload","RESET_DATERANGE_START","SET_DATERANGE_END","RESET_DATERANGE_END","actions","set_dr_start","startdate","date","setItem","stringify","setDRStart","type","set_dr_end","enddate","setDREnd","dayjs","extend","utc","dateUpperLimit","dateLowerLimit","timestampIt","Date","end","midnight","timestampDate","hour","minute","second","millisecond","add","subtract","unix","calculateDateDiff","start","diff","incrementByDays","howMany","format","incremented","sanitiseDate","createDate","baseUrl","getBitcoinBasic","a","axios","get","response","data","categories","genesis_date","hashing_algorithm","id","market_data","symbol","ath","ath_date","atl","atl_date","current_price","last_updated","basics","hashing","allTimeHigh","eur","allTimeLow","updated","getBitcoinMarket","fetchMarketData","createAsyncThunk","thunkAPI","valueSlice","marketvalues","tradingvolumes","fallback","loading","SET_MARKETVALUES","RESET_MARKETVALUES","extraReducers","pending","fulfilled","prices","total_volumes","rejected","fetchBasicData","basicSlice","basicInfo","SET_BASICINFO","RESET_BASICINFO","store","configureStore","reducer","dates","values","colors","Object","freeze","PRIMARY","SECONDARY","TERTIARY","BACKGROUND","ERR","INFO","WARN","SPECIAL","getColor","whatFor","getColorWithAlpha","alphaLevel","Header","basic","useSelector","value","data-testid","style","display","textAlign","justifyItems","alignItems","Typography","variant","title","sx","fontSize","color","marginLeft","generateID","base","StartDate","dispatcher","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","padding","label","onChange","newValue","handleDateChange","inputFormat","mask","renderInput","params","TextField","size","outlineColor","EndDate","DateRange","dispatch","useDispatch","flexDirection","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","scales","plugins","legend","position","text","ValueChart","TableRow","TableCell","colSpan","Fragment","datasetIdKey","sortValueData","sortOnly","sorted","sort","b","datetime","filterValueData","getClosest","target","reduce","Math","abs","increments","filtered","push","i","forEach","stamp","map","index","splinterData","labels","dataset","borderColor","backgroundColor","splinteredData","datasets","filterVolumeData","filterOnly","sortVolumeData","volume","findDownwardTrends","currentTrend","trends","length","current","datapairCurrent","datapairNext","filter","trend","findUpwardTrends","Insight","props","useEffect","setTimeout","TradingVolumeHighLow","low","round","Number","EPSILON","MarketValueTrendBearishBullish","bearish","AnalysedData","transmutatedValueDataSet","marketvalueData","transmutateOnly","transmutated","dataPair","floor","transmutateValueData","transmutatedVolumeDataSet","tradingvolumeData","transmutateVolumeData","sortedTrends","findLongestDownwardTrend","bullish","findLongestUpwardTrend","lowest","highest","datapoint","beforeHighest","findSafeBuyingPoint","beforeLowest","findSafeSellingPoint","DateRangeData","Stack","direction","marginBottom","Table","TableBody","AllTimeHighLow","BasicData","Card","marginTop","Content","spacing","Footer","justifyContent","version","Link","underline","href","theme","createTheme","palette","primary","main","secondary","info","error","warning","success","special","background","TheLayout","drEnd","drStart","decremented","decrementByWeek","Box","ThemeProvider","margin","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b07cab87.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","\n// info.js\n// tool collection to provide application information\n\nimport { appid, appname, version } from '../../package.json';\n\nexport const APPID = () => appid;\n\nexport const APPNAME = () => appname;\n\nexport const VERSION = () => version;","\n// daterange.js\n// BitSights internal tool to handle set dates within localstorage\n\nimport { APPID } from '../../tools/info';\n\n// getters\n\nexport const getDRStart = () => {\n  return JSON.parse(localStorage.getItem(`${APPID()}.drstart`)) ?? null;\n};\n\nexport const getDREnd = () => {\n  return JSON.parse(localStorage.getItem(`${APPID()}.drend`)) ?? null;\n};\n\n// setters\n\nexport const setDRStart = (date = null) => {\n  date !== null\n    ? localStorage.setItem(`${APPID()}.drstart`, JSON.stringify(date))\n    : localStorage.setItem(`${APPID()}.drstart`, JSON.stringify(null));\n};\n\nexport const setDREnd = (date = null) => {\n  date !== null\n    ? localStorage.setItem(`${APPID()}.drend`, JSON.stringify(date))\n    : localStorage.setItem(`${APPID()}.drend`, JSON.stringify(null));\n};","\n// \n// \n\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport { setDRStart, setDREnd } from '../../app/daterange';\n\nexport const dateSlice = createSlice({\n  name: 'dates',\n  initialState: {\n    daterange_start: null,\n    daterange_end: null\n  },\n  reducers: {\n    SET_DATERANGE_START: (state, action) => {\n      state.daterange_start = action.payload;\n    },\n    RESET_DATERANGE_START: (state, action) => {\n      state.daterange_start = null;\n    },\n    SET_DATERANGE_END: (state, action) => {\n      state.daterange_end = action.payload;\n    },\n    RESET_DATERANGE_END: (state, action) => {\n      state.daterange_end = null;\n    } \n  }\n});\n\nexport const { SET_DATERANGE_START, RESET_DATERANGE_START, SET_DATERANGE_END, RESET_DATERANGE_END } = dateSlice.actions;\n\nexport const set_dr_start = (startdate) => {\n  setDRStart(startdate);\n  return {\n    type: 'dates/SET_DATERANGE_START',\n    payload: startdate\n  };\n};\n\nexport const set_dr_end = (enddate) => {\n  setDREnd(enddate);\n  return {\n    type: 'dates/SET_DATERANGE_END',\n    payload: enddate\n  };\n};\n\nexport const reset_dr_start = () => {\n  return {\n    type: 'dates/RESET_DATERANGE_START'\n  };\n};\n\nexport const reset_dr_end = () => {\n  return {\n    type: 'dates/RESET_DATERANGE_END'\n  };\n};\n\nexport default dateSlice.reducer;","\n// date.js\n// tool to create and manipulate dates for BitSights app\n\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\ndayjs.extend(utc);\n\n// date limitations for date range\n\nconst dateLowerLimit = dayjs('2013-05-01');\nlet dateUpperLimit;\n\n// tool function to convert date to UNIX timestamp (seconds)\n\nexport const timestampIt = (date = new Date(), end = false, midnight = false) => {\n  const timestampDate = midnight\n    ? dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0)\n    : end\n      ? dayjs.utc(date).add(1, 'hour')\n      : dayjs.utc(date).subtract(1, 'hour');\n  return timestampDate.unix();\n};\n\n// tool to calculate date difference\n\nexport const calculateDateDiff = (start, end) => {\n  return dayjs.utc(end).diff(dayjs.utc(start), 'day');\n};\n\n// tool to calculate date range length\n\nexport const calculateDateRangeLength = (start, end) => {\n  return calculateDateDiff(start, end) +1;\n};\n\n// tool to add days to date (one by default)\n\nexport const incrementByDays = (date = new Date(), howMany = 1, format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  const incremented = dayjs.utc(date).add(howMany, 'day');\n  if (incremented.diff(dateUpperLimit, 'day') <= 0 && dayjs.utc(date).diff(dateLowerLimit, 'day') >= 0) {\n    return format ? incremented.format('YYYY-MM-DD') : incremented;\n  } else {\n    return null;\n  }\n};\n\n// tool function to sanitise date in to human readable format\n\nexport const sanitiseDate = (date = new Date()) => {\n  return dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).format('YYYY-MM-DD');\n};\n\n// tool function to decrement date by one week\n\nexport const decrementByWeek = (date = new Date(), format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  const decremented = dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).subtract(7, 'day');\n  if (decremented.diff(dateLowerLimit, 'day') >= 0 && dayjs.utc(date).diff(dateUpperLimit, 'day') <= 0) {\n    return format ? decremented.format('YYYY-MM-DD') : decremented;\n  } else {\n    return null;\n  }\n};\n\n// tool function to increment date by one week\n\nexport const incrementByWeek = (date = new Date(), format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  const incremented = dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).add(7, 'day');\n  if (incremented.diff(dateUpperLimit, 'day') <= 0 && dayjs.utc(date).diff(dateLowerLimit, 'day') >= 0) {\n    return format ? incremented.format('YYYY-MM-DD') : incremented;\n  } else {\n    return null;\n  }\n};\n\n// tool function to create date\n\nexport const createDate = (date = new Date(), format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  if (dayjs.utc(date).diff(dateLowerLimit, 'day') >= 0 && dayjs.utc(date).diff(dateUpperLimit, 'day') <= 0) {\n    return format ? dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).format('YYYY-MM-DD') : dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0);\n  } else {\n    return null;\n  }\n};","\n// \n// \n\nimport axios from 'axios';\n\nimport { timestampIt } from '../../tools/date';\nimport { getDRStart, getDREnd } from '../app/daterange';\n\nconst baseUrl = 'https://api.coingecko.com/api/v3/coins/bitcoin';\n\nconst basicDataUrlAdditive = '?localization=false&tickers=false';\n\nconst marketUrlAdditive = '/market_chart/range?';\n\nconst currencyUrlAdditive = 'vs_currency=eur';\n\nexport const getBitcoinBasic = async () => {\n  const response = await axios.get(`${baseUrl}${basicDataUrlAdditive}`);\n  const {\n    categories,\n    genesis_date,\n    hashing_algorithm,\n    id,\n    market_data,\n    name,\n    symbol\n  } = response?.data;\n  const {\n    ath, ath_date, atl, atl_date,\n    current_price,\n    last_updated\n  } = market_data;\n  const basics = {\n    categories: categories,\n    genesis_date: genesis_date,\n    hashing: hashing_algorithm,\n    id: id,\n    name: name,\n    symbol: symbol,\n    market_data: {\n      allTimeHigh: ath.eur,\n      ath_date: ath_date.eur,\n      allTimeLow: atl.eur,\n      atl_date: atl_date.eur,\n      current_price: current_price.eur,\n      updated: last_updated\n    }\n  };\n  return basics ?? null;\n};\n\nexport const getBitcoinMarket = async () => {\n  const start = timestampIt(getDRStart(), false, false);\n  const end = timestampIt(getDREnd(), true, false);\n  const response = await axios.get(`${baseUrl}${marketUrlAdditive}${currencyUrlAdditive}&from=${start}&to=${end}`);\n  return response?.data ?? null;\n};","\n// \n// \n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { getBitcoinMarket } from '../../services/fetch';\n\nexport const fetchMarketData = createAsyncThunk(\n  'values/fetchMarketData',\n  async (thunkAPI) => {\n    const market_data = await getBitcoinMarket();\n    return market_data ?? null;\n  });\n\nexport const valueSlice = createSlice({\n  name: 'values',\n  initialState: {\n    marketvalues: null,\n    tradingvolumes: null,\n    fallback: -0,\n    loading: false\n  },\n  reducers: {\n    SET_MARKETVALUES: (state, action) => {\n      state.marketvalues = action.payload;\n    },\n    RESET_MARKETVALUES: (state, action) => {\n      state.marketvalues = null;\n    },\n  },\n  extraReducers: {\n    [fetchMarketData.pending]: (state) => {\n      state.loading = true;\n    },\n    [fetchMarketData.fulfilled]: (state, { payload }) => {\n      state.loading = false;\n      state.marketvalues = payload.prices;\n      state.tradingvolumes = payload.total_volumes;\n    },\n    [fetchMarketData.rejected]: (state) => {\n      state.loading = false;\n    }\n  }\n});\n\nexport const { SET_MARKETVALUES, RESET_MARKETVALUES } = valueSlice.actions;\n\nexport default valueSlice.reducer;","\n// \n// \n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { getBitcoinBasic } from '../../services/fetch';\n\nexport const fetchBasicData = createAsyncThunk(\n  'basics/fetchBasicData',\n  async (thunkAPI) => {\n    const data = await getBitcoinBasic();\n    return data ?? null;\n  });\n\nexport const basicSlice = createSlice({\n  name: 'basics',\n  initialState: {\n    basicInfo: null,\n    loading: false\n  },\n  reducers: {\n    SET_BASICINFO: (state, action) => {\n      state.basicInfo = action.payload;\n    },\n    RESET_BASICINFO: (state, action) => {\n      state.basicInfo = null;\n    }, \n  },\n  extraReducers: {\n    [fetchBasicData.pending]: (state) => {\n      state.loading = true;\n    },\n    [fetchBasicData.fulfilled]: (state, { payload }) => {\n      state.loading = false;\n      state.basicInfo = payload;\n    },\n    [fetchBasicData.rejected]: (state) => {\n      state.loading = false;\n    }\n  }\n});\n\nexport const { SET_MARKETVALUES, RESET_MARKETVALUES } = basicSlice.actions;\n\nexport default basicSlice.reducer;","\n// store.js\n// BitSights global state lies in here\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport dateSlice from './slices/date';\nimport valueSlice from './slices/value';\nimport basicSlice from './slices/basic';\n\nexport const store = configureStore({\n  reducer: {\n    basics: basicSlice,\n    dates: dateSlice,\n    values: valueSlice\n  }\n});","\nconst colors = Object.freeze({\n  PRIMARY: [255,204,29],\n  SECONDARY: [11,70,25],\n  TERTIARY: [17,101,48],\n  BACKGROUND: [218,218,218],\n  ERR: [205,24,24],\n  INFO: [15,44,103],\n  WARN: [255,103,1],\n  SPECIAL: [174,0,90]\n});\n\nexport const getColor = (whatFor = 'default') => {\n  switch (whatFor) {\n  case 'background': return `rgb(${colors.BACKGROUND})`;\n  case 'background-alt': return `rgb(${colors.PRIMARY})`;\n  case 'header': return `rgb(${colors.SECONDARY})`;\n  case 'text': return `rgb(${colors.TERTIARY})`;\n  case 'err': return `rgb(${colors.ERR})`;\n  case 'warn': return `rgb(${colors.WARN})`;\n  case 'info': return `rgb(${colors.INFO})`;\n  case 'special': return `rgb(${colors.SPECIAL})`;\n  default: return `rgb(${colors.PRIMARY})`;\n  }  \n};\n\nexport const getColorWithAlpha = (whatFor = 'default', alphaLevel = 1.0) => {\n  switch (whatFor) {\n  case 'background': return `rgb(${colors.BACKGROUND},${alphaLevel})`;\n  case 'background-alt': return `rgb(${colors.PRIMARY},${alphaLevel})`;\n  case 'header': return `rgb(${colors.SECONDARY},${alphaLevel})`;\n  case 'text': return `rgb(${colors.TERTIARY},${alphaLevel})`;\n  case 'err': return `rgb(${colors.ERR},${alphaLevel})`;\n  case 'warn': return `rgb(${colors.WARN},${alphaLevel})`;\n  case 'info': return `rgb(${colors.INFO},${alphaLevel})`;\n  case 'special': return `rgb(${colors.SPECIAL},${alphaLevel})`;\n  default: return `rgb(${colors.PRIMARY},${alphaLevel})`;\n  }  \n};","\n// header.jsx\n// file provides header for the BitSights application\n\nimport React, {  } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@mui/material/Typography';\n\nimport { getColor } from '../../styles/colors';\n\nconst Header = ({id}) => {\n  const basic = useSelector(state => state.basics);\n  const value = useSelector(state => state.values);\n\n  return <header id={id} data-testid={id} style={{\n    display: 'inline-flex',\n    textAlign: 'center',\n    justifyItems: 'center',\n    alignItems: 'baseline'\n  }} >\n    <Typography variant='h1' title='₿itcoint market value analytics' sx={{fontSize: '1.5rem', color: getColor('special')}} >₿itSights </Typography>\n    {basic.loading || value.loading && <Typography variant='overline' sx={{marginLeft: '1rem', color: getColor('text')}} >[LOADING..]</Typography>}\n  </header>;\n};\n\nexport default Header;","\nexport const generateID = (base = 'id', whatFor = 'default') => {\n  return `${base}.${whatFor}`;\n};","\n//\n//\n\nimport React, { } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport DateAdapter from '@mui/lab/AdapterDayjs';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\n\nimport { fetchMarketData } from '../controllers/redux/slices/value';\nimport { set_dr_start, set_dr_end } from '../controllers/redux/slices/date';\nimport { } from '../styles/colors';\n\nconst DateRange = ({id}) => {\n  const dates = useSelector(state => state.dates);\n  const dispatch = useDispatch();\n  return <section style={{display: 'flex', flexDirection: 'row', justifyItems: 'space-evenly'}} >\n    <StartDate dispatcher={dispatch} value={dates?.daterange_start} />\n    <EndDate dispatcher={dispatch} value={dates?.daterange_end} />\n  </section>;\n};\n\nconst StartDate = ({dispatcher, value}) => {\n\n  const handleDateChange = (newValue) => {\n    dispatcher(set_dr_start(newValue));\n    dispatcher(fetchMarketData());\n  };\n\n  return <LocalizationProvider dateAdapter={DateAdapter}>\n    <DatePicker\n      sx={{\n        padding: '1rem'\n      }}\n      color={value !== null ? 'success' : 'info'}\n      label='Date range start'\n      value={value}\n      onChange={(newValue) => handleDateChange(newValue)}\n      inputFormat='YYYY-MM-DD'\n      mask='____-__-__'\n      renderInput={(params) => <TextField {...params} size='small' color={value !== null ? 'success' : 'info' } sx={{'&:hover:selected': {outlineColor: 'success'}}} />}\n    />\n  </LocalizationProvider>;\n};\n\nconst EndDate = ({dispatcher, value}) => {\n\n  const handleDateChange = (newValue) => {\n    dispatcher(set_dr_end(newValue));\n    dispatcher(fetchMarketData());\n  };\n\n  return <LocalizationProvider dateAdapter={DateAdapter}>\n    <DatePicker\n      sx={{\n        padding: '1rem'\n      }}\n      color={value !== null ? 'success' : 'info'}\n      label='Date range end'\n      value={value}\n      onChange={(newValue) => handleDateChange(newValue)}\n      inputFormat='YYYY-MM-DD'\n      mask='____-__-__'\n      renderInput={(params) => <TextField {...params} size='small' color={value !== null ? 'success' : 'info'} />}\n    />\n  </LocalizationProvider>;\n};\n\nexport default DateRange;","\n// valueChart.js\n// component to visualise date/value dataset\n\nimport React, {} from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport Typography from '@mui/material/Typography';\n\nimport { getColorWithAlpha } from '../styles/colors';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst options = {\n  responsive: true,\n  scales: {},\n  plugins: {\n    legend: {\n      display: false,\n      position: 'bottom',\n    },\n    title: {\n      display: false,\n      text: '₿TC market value in €',\n    },\n  },\n};\n\n// ValueChart is BTC market value date/value line chart component\n\nconst ValueChart = ({data}) => {\n  return <TableRow>\n    <TableCell colSpan={3} >\n      <React.Fragment>\n        <Typography variant='subtitle1' sx={{color: getColorWithAlpha('warn', 0.8)}} >₿TC market value in €</Typography>\n        <Line\n          options={options}\n          datasetIdKey='BTCmarketvalue'\n          data={data}\n        />\n      </React.Fragment>\n    </TableCell>\n  </TableRow>;\n};\n\nexport default ValueChart;","\n// marketvalue.js\n// toolset for mangling market value data received from the coingecko.com API for more suitable form\n\nimport { getDRStart, getDREnd } from '../controllers/app/daterange';\nimport { timestampIt, calculateDateDiff, incrementByDays, sanitiseDate, createDate } from './date';\n\nimport { getColorWithAlpha } from '../styles/colors';\n\n// transmutateValueData converts array of array to array of objects:\n// [[datetime (milliseconds), market value (euros)]] => [{datetime (seconds), value (euros)}]\n\nexport const transmutateValueData = (marketvalueData = [], transmutateOnly = false) => {\n  const transmutated = marketvalueData.map((dataPair) => ({datetime: Math.floor(dataPair[0]/1000), value: dataPair[1]}));\n  return transmutateOnly ? transmutated : sortValueData(transmutated);\n};\n\n// sortData sorts transmutated array of data by the datetime (seconds) from earliest to latest\n\nexport const sortValueData = (data = [], sortOnly = false) => {\n  const sorted = data.sort((a,b) => a.datetime - b.datetime);\n  return sortOnly ? sorted : filterValueData(sorted);\n};\n\n// getClosest is internal and not exported tool function to get from array the object that has closest datetime value to desired one (start, end or any from middle; these are UTC midnight values)\n\nconst getClosest = (data, target) => data.reduce((a, b) => Math.abs(target - a?.datetime) > Math.abs(target - b?.datetime) ? b : a);\n\n// filterData builds an array of UTC midnight timestamps and then by using these values and getClosest tool function creates filtered array of {datetime, value} which it will return at the end\n\nexport const filterValueData = (data = []) => {\n  const start = createDate(getDRStart());\n  const end = createDate(getDREnd());\n  const increments = calculateDateDiff(start, end);\n  let dates = [];\n  let filtered = [];\n  dates.push(timestampIt(start,false,true));\n  if (increments > 1) {\n    for (let i = 1; i < increments; i++) {\n      dates.push(timestampIt(incrementByDays(start,i),false,true));\n    }\n  }\n  dates.push(timestampIt(end,false,true));\n  dates.forEach((stamp) => {\n    filtered.push(getClosest(data, stamp));\n  });\n  return filtered.map(({datetime, value}, index) => ({datetime: datetime*1000, value: value, index: index}));\n};\n\n// splinterData tool function forms chart usable data from given data set\n\nexport const splinterData = (data = []) => {\n  let labels = [];\n  const dataset = {\n    id: 1,\n    label: '₿TC, €',\n    data: [],\n    borderColor: getColorWithAlpha('warn',0.8),\n    backgroundColor: getColorWithAlpha('warn',0.6)\n  };\n  data.forEach(({datetime, value}) => {\n    labels.push(sanitiseDate(datetime));\n    dataset.data.push(value);\n  });\n  const splinteredData = {\n    labels: labels,\n    datasets: [dataset]\n  };\n\n  return splinteredData;\n};\n\n// longestBearishBullish finds longest downward or upward trend in market value dataset\n\nexport const longestBearishBullish = (dataset = [], bearish = false) => {};","\n// trading.js\n// toolset for mangling market value data received from the coingecko.com API for more suitable form\n\nimport { getDRStart, getDREnd } from '../controllers/app/daterange';\nimport { timestampIt, calculateDateDiff, incrementByDays } from './date';\n\nimport { getColorWithAlpha } from '../styles/colors';\n\n// transmutateVolumeData converts array of array to array of objects:\n// [[datetime (milliseconds), trading volume (euros)]] => [{datetime (seconds), volume (euros)}]\n\nexport const transmutateVolumeData = (tradingvolumeData = [], transmutateOnly = false) => {\n  const transmutated = tradingvolumeData.map((dataPair) => ({datetime: Math.floor(dataPair[0]/1000), volume: dataPair[1]}));\n  return transmutateOnly ? transmutated : filterVolumeData(transmutated);\n};\n\n// getClosest is internal and not exported tool function to get from array the object that has closest datetime value to desired one (start, end or any from middle; these are UTC midnight values)\n\nconst getClosest = (data, target) => data.reduce((a, b) => Math.abs(target - b.datetime) < Math.abs(target - a.datetime) ? b : a);\n\n// filterData builds an array of UTC midnight timestamps and then by using these values and getClosest tool function creates filtered array of {datetime, volume} which it will return at the end\n\nexport const filterVolumeData = (data = [], filterOnly = false) => {\n  const start = getDRStart();\n  const end = getDREnd();\n  const increments = calculateDateDiff(start, end);\n  let dates = [];\n  let filtered = [];\n  dates.push(timestampIt(start,false,true));\n  if (increments > 1) {\n    for (let i = 1; i < increments; i++) {\n      dates.push(timestampIt(incrementByDays(start,i),false,true));\n    }\n  }\n  dates.push(timestampIt(end,false,true));\n  dates.forEach((stamp) => {\n    filtered.push(getClosest(data, stamp));\n  });\n  return filterOnly ? filtered : sortVolumeData(filtered);\n};\n\n// sortVolumeData sorts transmutated array of data by the trading volume (volume) from lowest to highest\n\nexport const sortVolumeData = (data = []) => {\n  const sorted = data.sort((a,b) => a.volume - b.volume);\n  return sorted.map(({datetime, volume}) => ({datetime: datetime*1000, volume}));\n};","\n// deepvalueanalytics.js\n// alanytics toolset to find trends in datasets\n\n// findDownwardTrends is tool function to find bearish (downward) market value trends from date/value dataset \n\nexport const findDownwardTrends = (dataset = null) => {\n  let currentTrend = 0;\n  let trends = [[]];\n  if (dataset && dataset.length > 0) {\n    for(let current = 0; current < dataset.length; current++) {\n      const datapairCurrent = dataset[current];\n      const datapairNext = dataset[current+1];\n      if (datapairCurrent?.value > datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n      } else if (datapairCurrent?.value < datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n        trends.push([]);\n        currentTrend += 1;\n      } else if (!datapairNext) {\n        trends[currentTrend].push(datapairCurrent);\n      }\n    }\n    return trends.filter((trend) => trend.length > 0);\n  } else {\n    return null;\n  }\n};\n\n// findDownwardTrends is tool function to find bullish (upward) market value trends from date/value dataset \n\nexport const findUpwardTrends = (dataset = null) => {\n  let currentTrend = 0;\n  let trends = [[]];\n  if (dataset && dataset.length > 0) {\n    for(let current = 0; current < dataset.length; current++) {\n      const datapairCurrent = dataset[current];\n      const datapairNext = dataset[current+1];\n      if (datapairCurrent?.value < datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n      } else if (datapairCurrent?.value > datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n        trends.push([]);\n        currentTrend += 1;\n      } else if (!datapairNext) {\n        trends[currentTrend].push(datapairCurrent);\n      }\n    }\n    return trends.filter((trend) => trend.length > 0);\n  } else {\n    return null;\n  }\n};\n\n// findLongestDownwardTrend is tool function that will return the longest found bearish trend\n\nexport const findLongestDownwardTrend = (dataset = null) => {\n  const sortedTrends = findDownwardTrends(dataset).sort((a, b) => a.length - b.length);\n  return sortedTrends[sortedTrends.length-1] ?? null;\n};\n\n// findLongestUpwardTrend is tool function that will return the longest found bullish trend\n\nexport const findLongestUpwardTrend = (dataset = null) => {\n  const sortedTrends = findUpwardTrends(dataset).sort((a, b) => a.length - b.length);\n  return sortedTrends[sortedTrends.length-1] ?? null;\n};\n\n// findSafeBuingPoint is tool function that will find and return the safest bitcoin buying day on the ranged dataset\n\nexport const findSafeBuyingPoint = (dataset = null) => {\n  if (dataset) {\n    let lowest = null;\n    let highest = null;\n    dataset.forEach((datapoint) => {\n      if (lowest === null || lowest?.value > datapoint?.value) {\n        lowest = datapoint;\n      }\n      if (highest === null || highest?.value < datapoint?.value) {\n        highest = datapoint;\n      }\n    });\n    if (lowest?.datetime < highest?.datetime) {\n      return lowest;\n    } else {\n      const beforeHighest = dataset.filter((datapoint) => datapoint?.datetime < highest?.datetime);\n      return beforeHighest?.length > 0 ? beforeHighest.sort((a,b) => a.value - b.value)[0] : null;\n    }\n  } else {\n    return null;\n  }\n};\n\n// \n\nexport const findRiskyBuingPoint = (dataset = null) => {};\n\n// \n\nexport const findSafeSellingPoint = (dataset = null) => {\n  if (dataset) {\n    let lowest = null;\n    let highest = null;\n    dataset.forEach((datapoint) => {\n      if (lowest === null || lowest?.value > datapoint?.value) {\n        lowest = datapoint;\n      }\n      if (highest === null || highest?.value < datapoint?.value) {\n        highest = datapoint;\n      }\n    });\n    if (highest?.datetime < lowest?.datetime) {\n      return highest;\n    } else {\n      const beforeLowest = dataset.filter((datapoint) => datapoint?.datetime > lowest?.datetime);\n      return beforeLowest?.length > 0 ? beforeLowest.sort((a,b) => a.value - b.value)[0] : null;\n    }\n  } else {\n    return null;\n  }\n};\n\n// \n\nexport const findRiskySellingPoint = (dataset = null) => {};","\n// insight.jsx\n// file contains the UI element of received Bitcoin basic and market value data for the BitSights application\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\n\nimport ValueChart from './valueChart';\n\nimport { getColor, getColorWithAlpha } from '../styles/colors';\n\nimport { transmutateValueData, splinterData } from '../tools/marketvalue';\nimport { transmutateVolumeData } from '../tools/tradingvolume';\nimport { findLongestDownwardTrend, findLongestUpwardTrend, findSafeBuyingPoint, findSafeSellingPoint } from '../tools/deepvalueanalytics';\nimport { sanitiseDate, calculateDateRangeLength } from '../tools/date';\n\nimport { fetchBasicData } from '../controllers/redux/slices/basic';\nimport { fetchMarketData } from '../controllers/redux/slices/value';\n\n// Insight is the component that UI section containing BTC data\n\nconst Insight = (props) => {\n  const { daterange_start, daterange_end } = useSelector(state => state.dates);\n  const dispatcher = useDispatch();\n  const { marketvalues, tradingvolumes, fallback } = useSelector(state => state.values);\n  const { basicInfo } = useSelector(state => state.basics);\n\n  useEffect(() => dispatcher(fetchBasicData()), [dispatcher]);\n\n  setTimeout(() => dispatcher(fetchBasicData()), 60000);\n\n  useEffect(() => dispatcher(fetchMarketData()), [dispatcher]);\n\n  // DateRange is subcomponent of Insight that displays the starting and ending date for dataset used in the application\n\n  const DateRange = () => {\n    return daterange_start && daterange_end\n      ? <TableRow >\n        <TableCell><Typography variant='subtitle1' >Date range</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{sanitiseDate(daterange_start)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{sanitiseDate(daterange_end)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{calculateDateRangeLength(daterange_start, daterange_end)} days</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // TradingVolumeHighLow is subcomponent that displays the highest/lowest trading volume and date of that value, selection done by using prop 'low', set as `false` by default\n\n  const TradingVolumeHighLow = ({dataset = null, low = false}) => {\n    return dataset\n      ? <TableRow>\n        <TableCell><Typography variant='subtitle1' >{low ? 'Lowest' : 'Highest'} trading volume</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? sanitiseDate(dataset[0].datetime) : sanitiseDate(dataset[dataset.length-1].datetime)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? Math.round((dataset[0].volume + Number.EPSILON)*100)/100 : Math.round((dataset[dataset.length-1].volume + Number.EPSILON)*100)/100} €</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // \n\n  const MarketValueTrendBearishBullish = ({dataset = null, bearish = true}) => {\n    return dataset\n      ? <React.Fragment>\n        <TableRow>\n          <TableCell ><Typography variant='subtitle1' sx={{color: getColor(bearish ? 'special' : 'text')}} >Longest {bearish ? 'bearish' : 'bullish'} trend</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor(bearish ? 'special' : 'text')}} >{dataset.length-1} days</Typography></TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell><Typography variant='subtitle1' >{bearish ? 'Bearish' : 'Bullish'} trend start</Typography></TableCell>\n          <TableCell><Typography variant='body1' >{sanitiseDate(dataset[0].datetime)}</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor('info')}} >{Math.round((dataset[0].value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell><Typography variant='subtitle1' >{bearish ? 'Bearish' : 'Bullish'} trend end</Typography></TableCell>\n          <TableCell><Typography variant='body1' >{sanitiseDate(dataset[dataset.length-1].datetime)}</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor(bearish ? 'special' : 'text')}} >{Math.round((dataset[dataset.length-1].value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n        </TableRow>\n      </React.Fragment>\n      : null;\n  };\n\n  // AnalysedData is subcomponent that displays the market value data received from the API in a informative form\n\n  const AnalysedData = () => {\n    const transmutatedValueDataSet = marketvalues && transmutateValueData(marketvalues);\n    const transmutatedVolumeDataSet = tradingvolumes && transmutateVolumeData(tradingvolumes);\n    const bearish = marketvalues && findLongestDownwardTrend(transmutatedValueDataSet);\n    const bullish = marketvalues && findLongestUpwardTrend(transmutatedValueDataSet);\n    const safeBuyingPoint = marketvalues && findSafeBuyingPoint(transmutatedValueDataSet);\n    const safeSellingPoint = marketvalues && findSafeSellingPoint(transmutatedValueDataSet);\n    return transmutatedValueDataSet\n      ? <React.Fragment>\n        <ValueChart data={splinterData(transmutatedValueDataSet)} />\n        <TradingVolumeHighLow dataset={transmutatedVolumeDataSet} low={true} />\n        <TradingVolumeHighLow dataset={transmutatedVolumeDataSet} low={false} />\n        <MarketValueTrendBearishBullish bearish={true} dataset={bearish} />\n        <MarketValueTrendBearishBullish bearish={false} dataset={bullish} />\n      </React.Fragment>\n      : null;\n  };\n\n  // DateRangeData is subcomponent that composes market value data and DateRange subcomponent to informative view in UI\n\n  const DateRangeData = () => {\n    return <Stack direction='column' sx={{marginBottom: '1rem'}} >\n      <Table size='small' >\n        <TableBody>\n          <DateRange/>\n          <AnalysedData />\n        </TableBody>\n      </Table>\n    </Stack>;\n  };\n\n  // AllTimeHighLow is subcomponent that displays either all-time high or low value and date of that value, selection done by prop 'low' which defaults to `false`\n\n  const AllTimeHighLow = ({low = false}) => {\n    return basicInfo\n      ? <TableRow >\n        <TableCell><Typography variant='subtitle1' >All-Time {low ? 'Low' : 'High'}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? sanitiseDate(basicInfo?.market_data?.atl_date) : sanitiseDate(basicInfo?.market_data?.ath_date)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' sx={{color: getColor(low ? 'special' : 'text')}} >{low ? basicInfo?.market_data?.allTimeLow : basicInfo?.market_data?.allTimeHigh} €</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // BasicData is subcomponent that composes Bitcoin basic data in to one UI section by using subcomponent AllTimeHighLow and data saved into state management (received from API)\n\n  const BasicData = () => {\n    return basicInfo\n      ? <Stack direction='column' >\n        <Table size='small' >\n          <TableBody>\n            <TableRow>\n              <TableCell><Typography variant='body1' >Value</Typography></TableCell>\n              <TableCell><Typography variant='body1' sx={{color: getColor('warn')}} >{basicInfo?.market_data?.current_price ?? fallback} €</Typography></TableCell>\n              <TableCell><Typography variant='subtitle1' >Name</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{basicInfo?.name}</Typography></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography variant='subtitle1' >Symbol</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{basicInfo?.symbol}{basicInfo?.symbol === 'btc' && ', ₿'}</Typography></TableCell>\n              <TableCell><Typography variant='subtitle1' >Hashing</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{basicInfo?.hashing}</Typography></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography variant='subtitle1' >Genesis date</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{sanitiseDate(basicInfo?.genesis_date)}</Typography></TableCell>\n            </TableRow>\n            <AllTimeHighLow />\n            <AllTimeHighLow low={true} />\n          </TableBody>\n        </Table>\n      </Stack>\n      : null;\n  };\n  \n  // returned component is a composite of DateRangeData and BasicData subcomponents\n\n  return <React.Fragment>\n    <Card sx={{backgroundColor: getColor('background'), padding: '1rem', marginTop: '1rem', marginBottom: '1rem'}} >\n      <Typography variant='h5' sx={{color: getColorWithAlpha('warn',0.8)}}>₿itcoin market value</Typography>\n      <DateRangeData />\n    </Card>\n    <Card sx={{backgroundColor: getColor('background'), padding: '1rem', marginTop: '1rem', marginBottom: '1rem'}} >\n      <Typography variant='h5' sx={{color: getColorWithAlpha('warn',0.8)}}>₿itcoin information</Typography>\n      <BasicData />\n    </Card>\n  </React.Fragment>;\n};\n\nexport default Insight;","\n// content.jsx\n// file provides view of content for the BitSights application\n\nimport React, {  } from 'react';\nimport { } from 'react-redux';\nimport Stack from '@mui/material/Stack';\n\nimport { generateID } from '../../tools/id';\nimport DateRange from '../dateInput';\nimport Insight from '../insight';\n\nconst Content = ({id}) => {\n  return <Stack id={id} data-testid={id} direction='column' spacing={2} sx={{marginTop: '1rem', marginBottom: '1rem'}} >\n    <DateRange id={generateID(id, 'daterange')} />\n    <Insight id={generateID(id, 'insight')} />\n  </Stack>;\n};\n\nexport default Content;","\n// footer.jsx\n// file provides footer for the BitSights application\n\nimport React, {  } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nimport { getColorWithAlpha } from '../../styles/colors';\nimport { VERSION } from '../../tools/info';\n\nconst Footer = ({id}) => {\n  return <footer id={id} data-testid={id} style={{display: 'inline-flex', alignItems: 'baseline', justifyContent: 'center', justifyItems: 'center'}} >\n    <Typography variant='overline' sx={{fontSize: '0.7rem', color: getColorWithAlpha('text',0.5)}} >Version {VERSION()}</Typography>\n    <Link underline='hover' href='https://github.com/RedFoxFinn/BitSights' sx={{marginLeft: '1rem', color: getColorWithAlpha('special', 0.5)}} >\n      <Typography variant='overline' sx={{fontSize: '0.7rem'}} >Repository</Typography>\n    </Link>\n    <Link underline='hover' href='https://github.com/RedFoxFinn' sx={{marginLeft: '1rem', color: getColorWithAlpha('special', 0.5)}} >\n      <Typography variant='overline' sx={{fontSize: '0.7rem'}} >Author</Typography>\n    </Link>\n  </footer>;\n};\n\nexport default Footer;","\nimport { createTheme } from '@mui/material/styles';\n\nimport { getColorWithAlpha, getColor } from './colors';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: `${getColor()}`\n    },\n    secondary: {\n      main: `${getColor('header')}`\n    },\n    info: {\n      main: `${getColor('info')}`\n    },\n    error: {\n      main: `${getColor('err')}`\n    },\n    warning: {\n      main: `${getColor('warn')}`\n    },\n    success: {\n      main: `${getColorWithAlpha('text',0.8)}`\n    },\n    special: {\n      main: `${getColor('special')}`\n    },\n    background: {\n      main: `${getColor('background')}`\n    }\n  }\n});\n\nexport default theme;","\n// layout.jsx\n// file provides basic layout for the BitSights application\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { ThemeProvider } from '@mui/material/styles';\n\nimport Header from './layout/header';\nimport Content from './layout/content';\nimport Footer from './layout/footer';\n\nimport theme from '../styles/theme';\nimport { generateID } from '../tools/id';\n\nimport { set_dr_start, set_dr_end } from '../controllers/redux/slices/date';\nimport { getDRStart, getDREnd } from '../controllers/app/daterange';\nimport { createDate, decrementByWeek } from '../tools/date';\n\nconst TheLayout = ({id}) => {\n  const { daterange_end } = useSelector(state => state.dates);\n  const dispatcher = useDispatch();\n\n  useEffect(() => {\n    const drEnd = getDREnd();\n    if (!drEnd) {\n      dispatcher(set_dr_end(createDate()));\n    } else {\n      dispatcher(set_dr_end(drEnd));\n    }\n    const drStart = getDRStart();\n    if (!drStart) {\n      dispatcher(set_dr_start(decrementByWeek(daterange_end)));\n    } else {\n      dispatcher(set_dr_start(drStart));\n    }\n  });\n  \n  return <Box id={id} data-testid={id} >\n    <ThemeProvider theme={theme} >\n      <Box id={id} data-testid={id} sx={{margin: '1rem', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <Header id={generateID(id, 'header')} />\n        <Content id={generateID(id, 'content')} />\n        <Footer id={generateID(id, 'footer')} />\n      </Box>\n    </ThemeProvider>\n  </Box>;\n};\n\nexport default TheLayout;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './controllers/redux/store';\n\nimport TheLayout from './components/layout';\n\nimport { APPID } from './tools/info';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <TheLayout id={APPID()}/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}