{"version":3,"sources":["serviceWorker.js","tools/info.js","controllers/app/daterange.js","controllers/redux/slices/date.js","tools/date.js","controllers/services/fetch.js","controllers/redux/slices/value.js","controllers/redux/slices/basic.js","controllers/redux/store.js","styles/colors.js","components/layout/header.jsx","tools/id.js","components/dateInput.jsx","components/valueChart.jsx","tools/marketvalue.js","tools/tradingvolume.js","tools/deepvalueanalytics.js","components/insight.jsx","components/layout/content.jsx","components/layout/footer.jsx","styles/theme.js","components/layout.jsx","hooks/useWindowSize.js","index.js"],"names":["Boolean","window","location","hostname","match","APPID","appid","getDRStart","JSON","parse","localStorage","getItem","getDREnd","dateSlice","createSlice","name","initialState","daterange_start","daterange_end","reducers","SET_DATERANGE_START","state","action","payload","RESET_DATERANGE_START","SET_DATERANGE_END","RESET_DATERANGE_END","actions","set_dr_start","startdate","date","setItem","stringify","setDRStart","type","set_dr_end","enddate","setDREnd","dayjs","extend","utc","dateUpperLimit","dateLowerLimit","timestampIt","Date","end","midnight","timestampDate","hour","minute","second","millisecond","add","subtract","unix","calculateDateDiff","start","diff","incrementByDays","howMany","format","incremented","sanitiseDate","createDate","baseUrl","getBitcoinBasic","a","axios","get","response","data","categories","genesis_date","hashing_algorithm","id","market_data","symbol","ath","ath_date","atl","atl_date","current_price","last_updated","basics","hashing","allTimeHigh","eur","allTimeLow","updated","getBitcoinMarket","fetchMarketData","createAsyncThunk","thunkAPI","valueSlice","marketvalues","tradingvolumes","fallback","loading","SET_MARKETVALUES","RESET_MARKETVALUES","extraReducers","pending","fulfilled","prices","total_volumes","rejected","fetchBasicData","basicSlice","basicInfo","SET_BASICINFO","RESET_BASICINFO","store","configureStore","reducer","dates","values","colors","Object","freeze","PRIMARY","SECONDARY","TERTIARY","BACKGROUND","ERR","INFO","WARN","SPECIAL","getColor","whatFor","getColorWithAlpha","alphaLevel","Header","basic","useSelector","value","data-testid","style","display","textAlign","justifyItems","alignItems","Typography","variant","title","sx","fontSize","color","marginLeft","generateID","base","StartDate","dispatcher","earlierThan","TableCell","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","padding","label","onChange","newValue","handleDateChange","inputFormat","mask","renderInput","params","TextField","size","outlineColor","EndDate","laterThan","DateRange","dispatch","useDispatch","Card","backgroundColor","Table","TableBody","TableRow","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","scales","plugins","legend","position","text","ValueChart","chartId","colSpan","Fragment","datasetIdKey","sortValueData","sortOnly","sorted","sort","b","datetime","filterValueData","getClosest","target","reduce","Math","abs","increments","filtered","push","i","forEach","stamp","map","index","splinterData","labels","dataset","borderColor","splinteredData","datasets","filterVolumeData","filterOnly","sortVolumeData","volume","findDownwardTrends","currentTrend","trends","length","current","datapairCurrent","datapairNext","filter","trend","findUpwardTrends","Insight","props","useEffect","setTimeout","ValueHighLow","low","round","Number","EPSILON","TradingVolumeHighLow","MarketValueTrendBearishBullish","bearish","key","BuyingSellingRecommendation","datasetBuy","datasetSell","AnalysedData","transmutatedValueDataSet","marketvalueData","transmutateOnly","transmutated","dataPair","floor","transmutateValueData","transmutatedVolumeDataSet","tradingvolumeData","transmutateVolumeData","sortedTrends","findLongestDownwardTrend","bullish","findLongestUpwardTrend","buyingPoint","lowest","highest","datapoint","afterHighest","beforeHighest","findBuyingPoint","sellingPoint","beforeLowest","afterLowest","findSellingPoint","DateRangeData","Stack","direction","margin","AllTimeHighLow","BasicData","Content","spacing","Footer","justifyContent","version","Link","underline","href","theme","createTheme","palette","primary","main","secondary","info","error","warning","success","special","background","TheLayout","useState","width","undefined","height","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","useLayoutEffect","drEnd","drStart","decremented","decrementByWeek","ThemeProvider","Box","flexDirection","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46b6cf0c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","\n// info.js\n// tool collection to provide application information\n\nimport { appid, appname, version } from '../../package.json';\n\nexport const APPID = () => appid;\n\nexport const APPNAME = () => appname;\n\nexport const VERSION = () => version;","\n// daterange.js\n// BitSights internal tool to handle set dates within localstorage\n\nimport { APPID } from '../../tools/info';\n\n// getters\n\nexport const getDRStart = () => {\n  return JSON.parse(localStorage.getItem(`${APPID()}.drstart`)) ?? null;\n};\n\nexport const getDREnd = () => {\n  return JSON.parse(localStorage.getItem(`${APPID()}.drend`)) ?? null;\n};\n\n// setters\n\nexport const setDRStart = (date = null) => {\n  date !== null\n    ? localStorage.setItem(`${APPID()}.drstart`, JSON.stringify(date))\n    : localStorage.setItem(`${APPID()}.drstart`, JSON.stringify(null));\n};\n\nexport const setDREnd = (date = null) => {\n  date !== null\n    ? localStorage.setItem(`${APPID()}.drend`, JSON.stringify(date))\n    : localStorage.setItem(`${APPID()}.drend`, JSON.stringify(null));\n};","\n// \n// \n\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport { setDRStart, setDREnd } from '../../app/daterange';\n\nexport const dateSlice = createSlice({\n  name: 'dates',\n  initialState: {\n    daterange_start: null,\n    daterange_end: null\n  },\n  reducers: {\n    SET_DATERANGE_START: (state, action) => {\n      state.daterange_start = action.payload;\n    },\n    RESET_DATERANGE_START: (state, action) => {\n      state.daterange_start = null;\n    },\n    SET_DATERANGE_END: (state, action) => {\n      state.daterange_end = action.payload;\n    },\n    RESET_DATERANGE_END: (state, action) => {\n      state.daterange_end = null;\n    } \n  }\n});\n\nexport const { SET_DATERANGE_START, RESET_DATERANGE_START, SET_DATERANGE_END, RESET_DATERANGE_END } = dateSlice.actions;\n\nexport const set_dr_start = (startdate) => {\n  setDRStart(startdate);\n  return {\n    type: 'dates/SET_DATERANGE_START',\n    payload: startdate\n  };\n};\n\nexport const set_dr_end = (enddate) => {\n  setDREnd(enddate);\n  return {\n    type: 'dates/SET_DATERANGE_END',\n    payload: enddate\n  };\n};\n\nexport const reset_dr_start = () => {\n  return {\n    type: 'dates/RESET_DATERANGE_START'\n  };\n};\n\nexport const reset_dr_end = () => {\n  return {\n    type: 'dates/RESET_DATERANGE_END'\n  };\n};\n\nexport default dateSlice.reducer;","\n// date.js\n// tool to create and manipulate dates for BitSights app\n\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\ndayjs.extend(utc);\n\n// date limitations for date range\n\nconst dateLowerLimit = dayjs('2013-05-01');\nlet dateUpperLimit;\n\n// tool function to convert date to UNIX timestamp (seconds)\n\nexport const timestampIt = (date = new Date(), end = false, midnight = false) => {\n  const timestampDate = midnight\n    ? dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0)\n    : end\n      ? dayjs.utc(date).add(1, 'hour')\n      : dayjs.utc(date).subtract(1, 'hour');\n  return timestampDate.unix();\n};\n\n// tool to calculate date difference\n\nexport const calculateDateDiff = (start, end) => {\n  return dayjs.utc(end).diff(dayjs.utc(start), 'day');\n};\n\n// tool to calculate date range length\n\nexport const calculateDateRangeLength = (start, end) => {\n  return calculateDateDiff(start, end) +1;\n};\n\n// tool to add days to date (one by default)\n\nexport const incrementByDays = (date = new Date(), howMany = 1, format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  const incremented = dayjs.utc(date).add(howMany, 'day');\n  if (incremented.diff(dateUpperLimit, 'day') <= 0 && dayjs.utc(date).diff(dateLowerLimit, 'day') >= 0) {\n    return format ? incremented.format('YYYY-MM-DD') : incremented;\n  } else {\n    return null;\n  }\n};\n\n// tool function to sanitise date in to human readable format\n\nexport const sanitiseDate = (date = new Date()) => {\n  return dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).format('YYYY-MM-DD');\n};\n\n// tool function to decrement date by one week\n\nexport const decrementByWeek = (date = new Date(), format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  const decremented = dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).subtract(7, 'day');\n  if (decremented.diff(dateLowerLimit, 'day') >= 0 && dayjs.utc(date).diff(dateUpperLimit, 'day') <= 0) {\n    return format ? decremented.format('YYYY-MM-DD') : decremented;\n  } else {\n    return null;\n  }\n};\n\n// tool function to increment date by one week\n\nexport const incrementByWeek = (date = new Date(), format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  const incremented = dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).add(7, 'day');\n  if (incremented.diff(dateUpperLimit, 'day') <= 0 && dayjs.utc(date).diff(dateLowerLimit, 'day') >= 0) {\n    return format ? incremented.format('YYYY-MM-DD') : incremented;\n  } else {\n    return null;\n  }\n};\n\n// tool function to create date\n\nexport const createDate = (date = new Date(), format = false) => {\n  dateUpperLimit = dayjs.utc(new Date());\n  if (dayjs.utc(date).diff(dateLowerLimit, 'day') >= 0 && dayjs.utc(date).diff(dateUpperLimit, 'day') <= 0) {\n    return format ? dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0).format('YYYY-MM-DD') : dayjs.utc(date).hour(0).minute(0).second(0).millisecond(0);\n  } else {\n    return null;\n  }\n};","\n// \n// \n\nimport axios from 'axios';\n\nimport { timestampIt } from '../../tools/date';\nimport { getDRStart, getDREnd } from '../app/daterange';\n\nconst baseUrl = 'https://api.coingecko.com/api/v3/coins/bitcoin';\n\nconst basicDataUrlAdditive = '?localization=false&tickers=false';\n\nconst marketUrlAdditive = '/market_chart/range?';\n\nconst currencyUrlAdditive = 'vs_currency=eur';\n\nexport const getBitcoinBasic = async () => {\n  const response = await axios.get(`${baseUrl}${basicDataUrlAdditive}`);\n  const {\n    categories,\n    genesis_date,\n    hashing_algorithm,\n    id,\n    market_data,\n    name,\n    symbol\n  } = response?.data;\n  const {\n    ath, ath_date, atl, atl_date,\n    current_price,\n    last_updated\n  } = market_data;\n  const basics = {\n    categories: categories,\n    genesis_date: genesis_date,\n    hashing: hashing_algorithm,\n    id: id,\n    name: name,\n    symbol: symbol,\n    market_data: {\n      allTimeHigh: ath.eur,\n      ath_date: ath_date.eur,\n      allTimeLow: atl.eur,\n      atl_date: atl_date.eur,\n      current_price: current_price.eur,\n      updated: last_updated\n    }\n  };\n  return basics ?? null;\n};\n\nexport const getBitcoinMarket = async () => {\n  const start = timestampIt(getDRStart(), false, false);\n  const end = timestampIt(getDREnd(), true, false);\n  const response = await axios.get(`${baseUrl}${marketUrlAdditive}${currencyUrlAdditive}&from=${start}&to=${end}`);\n  return response?.data ?? null;\n};","\n// \n// \n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { getBitcoinMarket } from '../../services/fetch';\n\nexport const fetchMarketData = createAsyncThunk(\n  'values/fetchMarketData',\n  async (thunkAPI) => {\n    const market_data = await getBitcoinMarket();\n    return market_data ?? null;\n  });\n\nexport const valueSlice = createSlice({\n  name: 'values',\n  initialState: {\n    marketvalues: null,\n    tradingvolumes: null,\n    fallback: -0,\n    loading: false\n  },\n  reducers: {\n    SET_MARKETVALUES: (state, action) => {\n      state.marketvalues = action.payload;\n    },\n    RESET_MARKETVALUES: (state, action) => {\n      state.marketvalues = null;\n    },\n  },\n  extraReducers: {\n    [fetchMarketData.pending]: (state) => {\n      state.loading = true;\n    },\n    [fetchMarketData.fulfilled]: (state, { payload }) => {\n      state.loading = false;\n      state.marketvalues = payload.prices;\n      state.tradingvolumes = payload.total_volumes;\n    },\n    [fetchMarketData.rejected]: (state) => {\n      state.loading = false;\n    }\n  }\n});\n\nexport const { SET_MARKETVALUES, RESET_MARKETVALUES } = valueSlice.actions;\n\nexport default valueSlice.reducer;","\n// \n// \n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nimport { getBitcoinBasic } from '../../services/fetch';\n\nexport const fetchBasicData = createAsyncThunk(\n  'basics/fetchBasicData',\n  async (thunkAPI) => {\n    const data = await getBitcoinBasic();\n    return data ?? null;\n  });\n\nexport const basicSlice = createSlice({\n  name: 'basics',\n  initialState: {\n    basicInfo: null,\n    loading: false\n  },\n  reducers: {\n    SET_BASICINFO: (state, action) => {\n      state.basicInfo = action.payload;\n    },\n    RESET_BASICINFO: (state, action) => {\n      state.basicInfo = null;\n    }, \n  },\n  extraReducers: {\n    [fetchBasicData.pending]: (state) => {\n      state.loading = true;\n    },\n    [fetchBasicData.fulfilled]: (state, { payload }) => {\n      state.loading = false;\n      state.basicInfo = payload;\n    },\n    [fetchBasicData.rejected]: (state) => {\n      state.loading = false;\n    }\n  }\n});\n\nexport const { SET_MARKETVALUES, RESET_MARKETVALUES } = basicSlice.actions;\n\nexport default basicSlice.reducer;","\n// store.js\n// BitSights global state lies in here\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport dateSlice from './slices/date';\nimport valueSlice from './slices/value';\nimport basicSlice from './slices/basic';\n\nexport const store = configureStore({\n  reducer: {\n    basics: basicSlice,\n    dates: dateSlice,\n    values: valueSlice\n  }\n});","\nconst colors = Object.freeze({\n  PRIMARY: [255,204,29],\n  SECONDARY: [11,70,25],\n  TERTIARY: [17,101,48],\n  BACKGROUND: [218,218,218],\n  ERR: [205,24,24],\n  INFO: [15,44,103],\n  WARN: [255,103,1],\n  SPECIAL: [174,0,90]\n});\n\nexport const getColor = (whatFor = 'default') => {\n  switch (whatFor) {\n  case 'background': return `rgb(${colors.BACKGROUND})`;\n  case 'background-alt': return `rgb(${colors.PRIMARY})`;\n  case 'header': return `rgb(${colors.SECONDARY})`;\n  case 'text': return `rgb(${colors.TERTIARY})`;\n  case 'err': return `rgb(${colors.ERR})`;\n  case 'warn': return `rgb(${colors.WARN})`;\n  case 'info': return `rgb(${colors.INFO})`;\n  case 'special': return `rgb(${colors.SPECIAL})`;\n  default: return `rgb(${colors.PRIMARY})`;\n  }  \n};\n\nexport const getColorWithAlpha = (whatFor = 'default', alphaLevel = 1.0) => {\n  switch (whatFor) {\n  case 'background': return `rgb(${colors.BACKGROUND},${alphaLevel})`;\n  case 'background-alt': return `rgb(${colors.PRIMARY},${alphaLevel})`;\n  case 'header': return `rgb(${colors.SECONDARY},${alphaLevel})`;\n  case 'text': return `rgb(${colors.TERTIARY},${alphaLevel})`;\n  case 'err': return `rgb(${colors.ERR},${alphaLevel})`;\n  case 'warn': return `rgb(${colors.WARN},${alphaLevel})`;\n  case 'info': return `rgb(${colors.INFO},${alphaLevel})`;\n  case 'special': return `rgb(${colors.SPECIAL},${alphaLevel})`;\n  default: return `rgb(${colors.PRIMARY},${alphaLevel})`;\n  }  \n};","\n// header.jsx\n// file provides header for the BitSights application\n\nimport React, {  } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from '@mui/material/Typography';\n\nimport { getColor } from '../../styles/colors';\n\nconst Header = ({id}) => {\n  const basic = useSelector(state => state.basics);\n  const value = useSelector(state => state.values);\n\n  function renderIt() {\n    return basic.loading || value.loading ? true : false;\n  }\n\n  return <header id={id} data-testid={id} style={{\n    display: 'inline-flex',\n    textAlign: 'center',\n    justifyItems: 'center',\n    alignItems: 'center'\n  }} >\n    <Typography variant='h1' title='₿itcoint market value analytics' sx={{fontSize: '1.5rem', color: getColor('special')}} >₿itSights</Typography>\n    {renderIt() && <Typography variant='overline' sx={{marginLeft: '1rem', color: getColor('text')}} >[LOADING..]</Typography>}\n  </header>;\n};\n\nexport default Header;","\nexport const generateID = (base = 'id', whatFor = 'default') => {\n  return `${base}.${whatFor}`;\n};","\n// dateInput.jsx\n// component and subcomponents for the UI, date range selector of the application\n\nimport React, { } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TextField from '@mui/material/TextField';\nimport DateAdapter from '@mui/lab/AdapterDayjs';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport Card from '@mui/material/Card';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\n\nimport { generateID } from '../tools/id';\nimport { timestampIt } from '../tools/date';\nimport { fetchMarketData } from '../controllers/redux/slices/value';\nimport { set_dr_start, set_dr_end } from '../controllers/redux/slices/date';\nimport { getColor } from '../styles/colors';\n\n// DateRange is component for user to set date range for the application\n\nconst DateRange = ({id}) => {\n  const dates = useSelector(state => state.dates);\n  const dispatch = useDispatch();\n  return <Card sx={{backgroundColor: getColor('background'), padding: '1rem'}} id={id} data-testid={id} >\n    <Table size='small' >\n      <TableBody>\n        <TableRow>\n          <StartDate dispatcher={dispatch} value={dates?.daterange_start} earlierThan={dates?.daterange_end} id={generateID(id, 'start')} />\n          <EndDate dispatcher={dispatch} value={dates?.daterange_end} laterThan={dates?.daterange_start} id={generateID(id, 'end')} />\n        </TableRow>\n      </TableBody>\n    </Table>\n  </Card>;\n};\n\n// StartDate is subcomponent that forms the date selection tool for DateRange\n\nconst StartDate = ({dispatcher, value, earlierThan, id}) => {\n\n  const handleDateChange = (newValue) => {\n    if (timestampIt(newValue) < timestampIt(earlierThan)) {\n      dispatcher(set_dr_start(newValue));\n      dispatcher(fetchMarketData());\n    }\n  };\n\n  return <TableCell >\n    <LocalizationProvider dateAdapter={DateAdapter}>\n      <DatePicker\n        id={id} data-testid={id}\n        sx={{\n          padding: '1rem'\n        }}\n        color={value !== null ? 'success' : 'info'}\n        label='Date range start'\n        value={value}\n        onChange={(newValue) => handleDateChange(newValue)}\n        inputFormat='YYYY-MM-DD'\n        mask='____-__-__'\n        renderInput={(params) => <TextField {...params} size='small' color={value !== null ? 'success' : 'info' } sx={{'&:hover:selected': {outlineColor: 'success'}}} />}\n      />\n    </LocalizationProvider>\n  </TableCell>;\n};\n\n// EndDate is subcomponent that forms the date selection tool for DateRange\n\nconst EndDate = ({dispatcher, value, laterThan, id}) => {\n\n  const handleDateChange = (newValue) => {\n    if (timestampIt(newValue) > timestampIt(laterThan)) {\n      dispatcher(set_dr_end(newValue));\n      dispatcher(fetchMarketData());\n    }\n  };\n\n  return <TableCell >\n    <LocalizationProvider dateAdapter={DateAdapter}>\n      <DatePicker\n        id={id} data-testid={id} \n        sx={{\n          padding: '1rem'\n        }}\n        color={value !== null ? 'success' : 'info'}\n        label='Date range end'\n        value={value}\n        onChange={(newValue) => handleDateChange(newValue)}\n        inputFormat='YYYY-MM-DD'\n        mask='____-__-__'\n        renderInput={(params) => <TextField {...params} size='small' color={value !== null ? 'success' : 'info'} />}\n      />\n    </LocalizationProvider>\n  </TableCell>;\n};\n\nexport default DateRange;","\n// valueChart.js\n// component to visualise date/value dataset\n\nimport React, {} from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport Typography from '@mui/material/Typography';\n\nimport { getColorWithAlpha } from '../styles/colors';\n\nimport { generateID } from '../tools/id';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// options for the date/value chart\n\nconst options = {\n  responsive: true,\n  scales: {},\n  plugins: {\n    legend: {\n      display: false,\n      position: 'bottom',\n    },\n    title: {\n      display: false,\n      text: '₿TC market value in €',\n    },\n  },\n};\n\n// ValueChart is BTC market value date/value line chart component\n\nconst ValueChart = ({data, id = 'default'}) => {\n  const chartId = generateID(id, 'line_chart');\n  return <TableRow id={id} data-testid={id} >\n    <TableCell colSpan={3} >\n      <React.Fragment>\n        <Typography variant='subtitle1' sx={{color: getColorWithAlpha('warn', 0.8)}} >₿TC market value in €</Typography>\n        <Line\n          id={chartId}\n          data-testid={chartId}\n          options={options}\n          datasetIdKey='BTCmarketvalue'\n          data={data}\n        />\n      </React.Fragment>\n    </TableCell>\n  </TableRow>;\n};\n\nexport default ValueChart;","\n// marketvalue.js\n// toolset for mangling market value data received from the coingecko.com API for more suitable form\n\nimport { getDRStart, getDREnd } from '../controllers/app/daterange';\nimport { timestampIt, calculateDateDiff, incrementByDays, sanitiseDate, createDate } from './date';\n\nimport { getColorWithAlpha } from '../styles/colors';\n\n// transmutateValueData converts array of array to array of objects:\n// [[datetime (milliseconds), market value (euros)]] => [{datetime (seconds), value (euros)}]\n\nexport const transmutateValueData = (marketvalueData = [], transmutateOnly = false) => {\n  const transmutated = marketvalueData.map((dataPair) => ({datetime: Math.floor(dataPair[0]/1000), value: dataPair[1]}));\n  return transmutateOnly ? transmutated : sortValueData(transmutated);\n};\n\n// sortData sorts transmutated array of data by the datetime (seconds) from earliest to latest\n\nexport const sortValueData = (data = [], sortOnly = false) => {\n  const sorted = data.sort((a,b) => a.datetime - b.datetime);\n  return sortOnly ? sorted : filterValueData(sorted);\n};\n\n// getClosest is internal and not exported tool function to get from array the object that has closest datetime value to desired one (start, end or any from middle; these are UTC midnight values)\n\nconst getClosest = (data, target) => data.reduce((a, b) => Math.abs(target - a?.datetime) > Math.abs(target - b?.datetime) ? b : a);\n\n// filterData builds an array of UTC midnight timestamps and then by using these values and getClosest tool function creates filtered array of {datetime, value} which it will return at the end\n\nexport const filterValueData = (data = []) => {\n  const start = createDate(getDRStart());\n  const end = createDate(getDREnd());\n  const increments = calculateDateDiff(start, end);\n  let dates = [];\n  let filtered = [];\n  dates.push(timestampIt(start,false,true));\n  if (increments > 1) {\n    for (let i = 1; i < increments; i++) {\n      dates.push(timestampIt(incrementByDays(start,i),false,true));\n    }\n  }\n  dates.push(timestampIt(end,false,true));\n  dates.forEach((stamp) => {\n    filtered.push(getClosest(data, stamp));\n  });\n  return filtered.map(({datetime, value}, index) => ({datetime: datetime*1000, value: value, index: index}));\n};\n\n// splinterData tool function forms chart usable data from given data set\n\nexport const splinterData = (data = []) => {\n  let labels = [];\n  const dataset = {\n    id: 1,\n    label: '₿TC, €',\n    data: [],\n    borderColor: getColorWithAlpha('warn',0.8),\n    backgroundColor: getColorWithAlpha('warn',0.6)\n  };\n  data.forEach(({datetime, value}) => {\n    labels.push(sanitiseDate(datetime));\n    dataset.data.push(value);\n  });\n  const splinteredData = {\n    labels: labels,\n    datasets: [dataset]\n  };\n\n  return splinteredData;\n};","\n// trading.js\n// toolset for mangling market value data received from the coingecko.com API for more suitable form\n\nimport { getDRStart, getDREnd } from '../controllers/app/daterange';\nimport { timestampIt, calculateDateDiff, incrementByDays } from './date';\n\n// transmutateVolumeData converts array of array to array of objects:\n// [[datetime (milliseconds), trading volume (euros)]] => [{datetime (seconds), volume (euros)}]\n\nexport const transmutateVolumeData = (tradingvolumeData = [], transmutateOnly = false) => {\n  const transmutated = tradingvolumeData.map((dataPair) => ({datetime: Math.floor(dataPair[0]/1000), volume: dataPair[1]}));\n  return transmutateOnly ? transmutated : filterVolumeData(transmutated);\n};\n\n// getClosest is internal and not exported tool function to get from array the object that has closest datetime value to desired one (start, end or any from middle; these are UTC midnight values)\n\nconst getClosest = (data, target) => data.reduce((a, b) => Math.abs(target - b.datetime) < Math.abs(target - a.datetime) ? b : a);\n\n// filterData builds an array of UTC midnight timestamps and then by using these values and getClosest tool function creates filtered array of {datetime, volume} which it will return at the end\n\nexport const filterVolumeData = (data = [], filterOnly = false) => {\n  const start = getDRStart();\n  const end = getDREnd();\n  const increments = calculateDateDiff(start, end);\n  let dates = [];\n  let filtered = [];\n  dates.push(timestampIt(start,false,true));\n  if (increments > 1) {\n    for (let i = 1; i < increments; i++) {\n      dates.push(timestampIt(incrementByDays(start,i),false,true));\n    }\n  }\n  dates.push(timestampIt(end,false,true));\n  dates.forEach((stamp) => {\n    filtered.push(getClosest(data, stamp));\n  });\n  return filterOnly ? filtered : sortVolumeData(filtered);\n};\n\n// sortVolumeData sorts transmutated array of data by the trading volume (volume) from lowest to highest\n\nexport const sortVolumeData = (data = []) => {\n  const sorted = data.sort((a,b) => a.volume - b.volume);\n  return sorted.map(({datetime, volume}) => ({datetime: datetime*1000, volume}));\n};","\n// deepvalueanalytics.js\n// alanytics toolset to find trends in datasets\n\n// findDownwardTrends is tool function to find bearish (downward) market value trends from date/value dataset \n\nexport const findDownwardTrends = (dataset = null) => {\n  let currentTrend = 0;\n  let trends = [[]];\n  if (dataset && dataset.length > 0) {\n    for(let current = 0; current < dataset.length; current++) {\n      const datapairCurrent = dataset[current];\n      const datapairNext = dataset[current+1];\n      if (datapairCurrent?.value > datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n      } else if (datapairCurrent?.value < datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n        trends.push([]);\n        currentTrend += 1;\n      } else if (!datapairNext) {\n        trends[currentTrend].push(datapairCurrent);\n      }\n    }\n    return trends.filter((trend) => trend.length > 0);\n  } else {\n    return null;\n  }\n};\n\n// findDownwardTrends is tool function to find bullish (upward) market value trends from date/value dataset \n\nexport const findUpwardTrends = (dataset = null) => {\n  let currentTrend = 0;\n  let trends = [[]];\n  if (dataset && dataset.length > 0) {\n    for(let current = 0; current < dataset.length; current++) {\n      const datapairCurrent = dataset[current];\n      const datapairNext = dataset[current+1];\n      if (datapairCurrent?.value < datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n      } else if (datapairCurrent?.value > datapairNext?.value) {\n        trends[currentTrend].push(datapairCurrent);\n        trends.push([]);\n        currentTrend += 1;\n      } else if (!datapairNext) {\n        trends[currentTrend].push(datapairCurrent);\n      }\n    }\n    return trends.filter((trend) => trend.length > 0);\n  } else {\n    return null;\n  }\n};\n\n// findLongestDownwardTrend is tool function that will return the longest found bearish trend\n\nexport const findLongestDownwardTrend = (dataset = null) => {\n  const sortedTrends = findDownwardTrends(dataset).sort((a, b) => a.length - b.length);\n  return sortedTrends[sortedTrends.length-1] ?? null;\n};\n\n// findLongestUpwardTrend is tool function that will return the longest found bullish trend\n\nexport const findLongestUpwardTrend = (dataset = null) => {\n  const sortedTrends = findUpwardTrends(dataset).sort((a, b) => a.length - b.length);\n  return sortedTrends[sortedTrends.length-1] ?? null;\n};\n\n// findBuyingPoint is tool function that will find and return the safest bitcoin buying day on the ranged dataset\n\nexport const findBuyingPoint = (dataset = null) => {\n  if (dataset && dataset.length > 0) {\n    let lowest = null;\n    let highest = null;\n    dataset.forEach((datapoint) => {\n      if (lowest === null || lowest?.value > datapoint?.value) {\n        lowest = datapoint;\n      }\n      if (highest === null || highest?.value < datapoint?.value) {\n        highest = datapoint;\n      }\n    });\n    if (lowest?.datetime < highest?.datetime) {\n      return lowest;\n    } else if (lowest.index < dataset.length -1) {\n      const afterHighest = dataset.filter((datapoint) => datapoint?.index > highest?.index);\n      return afterHighest?.length > 0 ? afterHighest.sort((a, b) => a?.value - b?.value)[0] : null;\n    } else if (highest.index > 0) {\n      const beforeHighest = dataset.filter((datapoint) => datapoint?.index < highest?.index);\n      return beforeHighest?.length > 0 ? beforeHighest.sort((a,b) => a?.value - b?.value)[0] : null;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n};\n\n// findBuyingPoint is tool function that will find and return the safest bitcoin se day on the ranged dataset\n\nexport const findSellingPoint = (dataset = null) => {\n  if (dataset) {\n    let lowest = null;\n    let highest = null;\n    dataset.forEach((datapoint) => {\n      if (lowest === null || lowest?.value > datapoint?.value) {\n        lowest = datapoint;\n      }\n      if (highest === null || highest?.value < datapoint?.value) {\n        highest = datapoint;\n      }\n    });\n    if (highest?.datetime < lowest?.datetime) {\n      return highest;\n    } else if (lowest?.index > 0) {\n      const beforeLowest = dataset.filter((datapoint) => datapoint?.index < lowest?.index);\n      return beforeLowest?.length > 0 ? beforeLowest.sort((a,b) => b?.value - a?.value)[0] : null;\n    } else if (highest?.index < dataset.length -1) {\n      const afterLowest = dataset.filter((datapoint) => datapoint?.index > lowest?.index);\n      return afterLowest?.length > 0 ? afterLowest.sort((a, b) => b?.value - a?.value)[0] : null;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n};","\n// insight.jsx\n// file contains the UI element of received Bitcoin basic and market value data for the BitSights application\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\n\nimport ValueChart from './valueChart';\n\nimport { generateID } from '../tools/id';\n\nimport { getColor, getColorWithAlpha } from '../styles/colors';\n\nimport { transmutateValueData, splinterData } from '../tools/marketvalue';\nimport { transmutateVolumeData } from '../tools/tradingvolume';\nimport { findLongestDownwardTrend, findLongestUpwardTrend, findBuyingPoint, findSellingPoint } from '../tools/deepvalueanalytics';\nimport { sanitiseDate, calculateDateRangeLength } from '../tools/date';\n\nimport { fetchBasicData } from '../controllers/redux/slices/basic';\nimport { fetchMarketData } from '../controllers/redux/slices/value';\n\n// Insight is the component that UI section containing BTC data\n\nconst Insight = (props) => {\n  const { daterange_start, daterange_end } = useSelector(state => state.dates);\n  const dispatcher = useDispatch();\n  const { marketvalues, tradingvolumes, fallback } = useSelector(state => state.values);\n  const { basicInfo } = useSelector(state => state.basics);\n\n  useEffect(() => dispatcher(fetchBasicData()), [dispatcher]);\n\n  setTimeout(() => dispatcher(fetchBasicData()), 60000);\n\n  useEffect(() => dispatcher(fetchMarketData()), [dispatcher]);\n\n  // DateRange is subcomponent of Insight that displays the starting and ending date for dataset used in the application\n\n  const DateRange = ({id}) => {\n    return daterange_start && daterange_end\n      ? <TableRow id={id} data-testid={id} >\n        <TableCell><Typography variant='subtitle1' >Date range</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{sanitiseDate(daterange_start)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{sanitiseDate(daterange_end)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{calculateDateRangeLength(daterange_start, daterange_end)} days</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // ValueHighLow is subcomponent that displays the highest/lowest bitcoin value and date of that value, selection done by using prop 'low', set as `false` by default\n\n  const ValueHighLow = ({dataset = null, low = false, id = 'default'}) => {\n    const sorted = dataset.sort((a,b) => a?.value - b?.value);\n    return dataset\n      ? <TableRow id={id} data-testid={id} >\n        <TableCell><Typography variant='subtitle1' >{low ? 'Lowest' : 'Highest'} value</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? sanitiseDate(sorted[0].datetime) : sanitiseDate(sorted[dataset.length-1].datetime)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' sx={{color: getColor(low ? 'special' : 'text')}} >{low ? Math.round((sorted[0].value + Number.EPSILON)*100)/100 : Math.round((sorted[dataset.length-1].value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // TradingVolumeHighLow is subcomponent that displays the highest/lowest trading volume and date of that value, selection done by using prop 'low', set as `false` by default\n\n  const TradingVolumeHighLow = ({dataset = null, low = false, id = 'default'}) => {\n    return dataset\n      ? <TableRow id={id} data-testid={id} >\n        <TableCell><Typography variant='subtitle1' >{low ? 'Lowest' : 'Highest'} trading volume</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? sanitiseDate(dataset[0].datetime) : sanitiseDate(dataset[dataset.length-1].datetime)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? Math.round((dataset[0].volume + Number.EPSILON)*100)/100 : Math.round((dataset[dataset.length-1].volume + Number.EPSILON)*100)/100} €</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // MarketValueTrendBearishBullish is subcomponent that displays the information of longest downward/upward market value trend, selection done by using prop 'bearish', set as `true` by default\n\n  const MarketValueTrendBearishBullish = ({dataset = null, bearish = true, id = 'default'}) => {\n    return dataset\n      ? <React.Fragment key={id} >\n        <TableRow id={`${id}.head`} data-testid={`${id}.head`} >\n          <TableCell ><Typography variant='subtitle1' sx={{color: getColor(bearish ? 'special' : 'text')}} >Longest {bearish ? 'bearish' : 'bullish'} trend</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor(bearish ? 'special' : 'text')}} >{dataset.length-1} days</Typography></TableCell>\n        </TableRow>\n        <TableRow id={`${id}.start`} data-testid={`${id}.start`} >\n          <TableCell><Typography variant='subtitle1' >{bearish ? 'Bearish' : 'Bullish'} trend start</Typography></TableCell>\n          <TableCell><Typography variant='body1' >{sanitiseDate(dataset[0].datetime)}</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor('info')}} >{Math.round((dataset[0].value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n        </TableRow>\n        <TableRow id={`${id}.end`} data-testid={`${id}.end`} >\n          <TableCell><Typography variant='subtitle1' >{bearish ? 'Bearish' : 'Bullish'} trend end</Typography></TableCell>\n          <TableCell><Typography variant='body1' >{sanitiseDate(dataset[dataset.length-1].datetime)}</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor(bearish ? 'special' : 'text')}} >{Math.round((dataset[dataset.length-1].value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n        </TableRow>\n      </React.Fragment>\n      : null;\n  };\n\n  // BuyingSellingRecommendation is subcomponent that shows the recommendations of if and if then when to sell or buy and with what market value\n\n  const BuyingSellingRecommendation = ({datasetBuy = null, datasetSell = null, id = 'default'}) => {\n    return <React.Fragment key={id} >\n      <TableRow id={`${id}.head`} data-testid={`${id}.head`} >\n        <TableCell><Typography variant='subtitle1' sx={{color: getColorWithAlpha('warn',0.8)}} >Trade recommendations</Typography></TableCell>\n      </TableRow>\n      {datasetBuy\n        ? <TableRow id={`${id}.buy`} data-testid={`${id}.buy`} >\n          <TableCell><Typography variant='subtitle1' >Buying recommended</Typography></TableCell>\n          <TableCell><Typography variant='body1' >{sanitiseDate(datasetBuy?.datetime)}</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor('special')}} >{Math.round((datasetBuy.value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n        </TableRow>\n        : <TableRow id={`${id}.buy`} data-testid={`${id}.buy`} >\n          <TableCell><Typography variant='subtitle1' sx={{color: getColor('special')}} >Buying not recommended</Typography></TableCell>\n        </TableRow>}\n      {datasetSell\n        ? <TableRow id={`${id}.sell`} data-testid={`${id}.sell`} >\n          <TableCell><Typography variant='subtitle1' >Selling recommended</Typography></TableCell>\n          <TableCell><Typography variant='body1' >{sanitiseDate(datasetSell?.datetime)}</Typography></TableCell>\n          <TableCell><Typography variant='body1' sx={{color: getColor('text')}} >{Math.round((datasetSell?.value + Number.EPSILON)*100)/100} €</Typography></TableCell>\n        </TableRow>\n        : <TableRow id={`${id}.sell`} data-testid={`${id}.sell`} >\n          <TableCell><Typography variant='subtitle1' sx={{color: getColor('special')}} >Selling not recommended</Typography></TableCell>\n        </TableRow>}\n    </React.Fragment>;\n  };\n\n  // AnalysedData is subcomponent that displays the market value data received from the API in a informative form\n\n  const AnalysedData = ({id}) => {\n    const transmutatedValueDataSet = marketvalues ? transmutateValueData(marketvalues) : null;\n    const transmutatedVolumeDataSet = tradingvolumes ? transmutateVolumeData(tradingvolumes) : null;\n    const bearish = marketvalues && transmutatedValueDataSet ? findLongestDownwardTrend(transmutatedValueDataSet) : null;\n    const bullish = marketvalues && transmutatedValueDataSet ? findLongestUpwardTrend(transmutatedValueDataSet) : null;\n    const buyingPoint = marketvalues && transmutatedValueDataSet ? findBuyingPoint(transmutatedValueDataSet) : null;\n    const sellingPoint = marketvalues && transmutatedValueDataSet ? findSellingPoint(transmutatedValueDataSet) : null;\n    return transmutatedValueDataSet\n      ? <React.Fragment key={id} >\n        <ValueChart data={splinterData(transmutatedValueDataSet)} id={generateID(id, 'value_chart')} />\n        <ValueHighLow dataset={transmutatedValueDataSet} low={true} id={generateID(id, 'value_low')} />\n        <ValueHighLow dataset={transmutatedValueDataSet} low={false} id={generateID(id, 'value_high')} />\n        <TableRow id={`${id}.trade`} data-testid={`${id}.trade`} >\n          <TableCell ><Typography variant='subtitle1' sx={{color: getColorWithAlpha('warn',0.8)}} >Trade volume</Typography></TableCell>\n        </TableRow>\n        <TradingVolumeHighLow dataset={transmutatedVolumeDataSet} low={true} id={generateID(id, 'volume_low')} />\n        <TradingVolumeHighLow dataset={transmutatedVolumeDataSet} low={false} id={generateID(id, 'volume_high')} />\n        <BuyingSellingRecommendation datasetBuy={buyingPoint} datasetSell={sellingPoint} id={generateID(id, 'trade_recommendations')} />\n        <TableRow id={`${id}.trend`} data-testid={`${id}.trend`} >\n          <TableCell ><Typography variant='subtitle1' sx={{color: getColorWithAlpha('warn',0.8)}} >Market value trend</Typography></TableCell>\n        </TableRow>\n        <MarketValueTrendBearishBullish bearish={true} dataset={bearish} id={generateID(id, 'trend_bearish')} />\n        <MarketValueTrendBearishBullish bearish={false} dataset={bullish} id={generateID(id, 'trend_bullish')} />\n      </React.Fragment>\n      : null;\n  };\n\n  // DateRangeData is subcomponent that composes market value data and DateRange subcomponent to informative view in UI\n\n  const DateRangeData = ({id = 'default'}) => {\n    return <Stack direction='column' sx={{margin: '0 1rem'}} id={id} data-testid={id} >\n      <Table size='small' >\n        <TableBody>\n          <DateRange id={generateID(id, 'date_range')} />\n          <AnalysedData id={generateID(id, 'analysed_data')} />\n        </TableBody>\n      </Table>\n    </Stack>;\n  };\n\n  // AllTimeHighLow is subcomponent that displays either all-time high or low value and date of that value, selection done by prop 'low' which defaults to `false`\n\n  const AllTimeHighLow = ({low, id = 'default'}) => {\n    return basicInfo\n      ? <TableRow id={id} data-testid={id} >\n        <TableCell><Typography variant='subtitle1' >All-Time {low ? 'Low' : 'High'}</Typography></TableCell>\n        <TableCell><Typography variant='body1' >{low ? sanitiseDate(basicInfo?.market_data?.atl_date) : sanitiseDate(basicInfo?.market_data?.ath_date)}</Typography></TableCell>\n        <TableCell><Typography variant='body1' sx={{color: getColor(low ? 'special' : 'text')}} >{low ? basicInfo?.market_data?.allTimeLow : basicInfo?.market_data?.allTimeHigh} €</Typography></TableCell>\n      </TableRow>\n      : null;\n  };\n\n  // BasicData is subcomponent that composes Bitcoin basic data in to one UI section by using subcomponent AllTimeHighLow and data saved into state management (received from API)\n\n  const BasicData = ({id = 'default'}) => {\n    return basicInfo\n      ? <Stack direction='column' sx={{margin: '0 1rem'}} id={id} data-testid={id} >\n        <Table size='small' >\n          <TableBody>\n            <TableRow>\n              <TableCell><Typography variant='body1' >Value</Typography></TableCell>\n              <TableCell><Typography variant='body1' sx={{color: getColor('warn')}} >{basicInfo?.market_data?.current_price ?? fallback} €</Typography></TableCell>\n              <TableCell><Typography variant='subtitle1' >Name</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{basicInfo?.name}</Typography></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography variant='subtitle1' >Symbol</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{basicInfo?.symbol}{basicInfo?.symbol === 'btc' && ', ₿'}</Typography></TableCell>\n              <TableCell><Typography variant='subtitle1' >Hashing</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{basicInfo?.hashing}</Typography></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell><Typography variant='subtitle1' >Genesis date</Typography></TableCell>\n              <TableCell><Typography variant='body1' >{sanitiseDate(basicInfo?.genesis_date)}</Typography></TableCell>\n            </TableRow>\n            <AllTimeHighLow id={generateID(id, 'athl_high')} />\n            <AllTimeHighLow low={true} id={generateID(id, 'athl_low')} />\n          </TableBody>\n        </Table>\n      </Stack>\n      : null;\n  };\n\n  // returned component is a composite of DateRangeData and BasicData subcomponents\n\n  return <section id={props.id} data-testid={props.id} >\n    <Card sx={{backgroundColor: getColor('background'), padding: '1rem', margin: '1rem'}} >\n      <Typography variant='h5' sx={{color: getColorWithAlpha('warn',0.8), margin: '0 1rem'}}>₿itcoin market value</Typography>\n      <DateRangeData id={generateID(props.id, 'ranged_data')} />\n    </Card>\n    <Card sx={{backgroundColor: getColor('background'), padding: '1rem', margin: '1rem'}} >\n      <Typography variant='h5' sx={{color: getColorWithAlpha('warn',0.8), margin: '0 1rem'}}>₿itcoin information</Typography>\n      <BasicData id={generateID(props.id, 'basic_data')}/>\n    </Card>\n  </section>;\n};\n\nexport default Insight;","\n// content.jsx\n// file provides view of content for the BitSights application\n\nimport React from 'react';\nimport Stack from '@mui/material/Stack';\nimport { useSelector } from 'react-redux';\n\nimport { generateID } from '../../tools/id';\nimport DateRange from '../dateInput';\nimport Insight from '../insight';\n\nconst Content = ({id}) => {\n  const { daterange_start, daterange_end } = useSelector(state => state.dates);\n  return <Stack id={id} data-testid={id} direction='column' spacing={2} sx={{margin: '1rem'}} >\n    <DateRange id={generateID(id, 'daterange')} />\n    {daterange_start && daterange_end && <Insight id={generateID(id, 'insight')} />}\n  </Stack>;\n};\n\nexport default Content;","\n// footer.jsx\n// file provides footer for the BitSights application\n\nimport React, {  } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nimport { getColorWithAlpha } from '../../styles/colors';\nimport { VERSION } from '../../tools/info';\n\nconst Footer = ({id}) => {\n  return <footer id={id} data-testid={id} style={{display: 'inline-flex', alignItems: 'baseline', justifyContent: 'center', justifyItems: 'center'}} >\n    <Typography variant='overline' sx={{fontSize: '0.7rem', color: getColorWithAlpha('text',0.5)}} >Version {VERSION()}</Typography>\n    <Link underline='hover' href='https://github.com/RedFoxFinn/BitSights' sx={{marginLeft: '1rem', color: getColorWithAlpha('special', 0.5)}} >\n      <Typography variant='overline' sx={{fontSize: '0.7rem'}} >Repository</Typography>\n    </Link>\n    <Link underline='hover' href='https://github.com/RedFoxFinn' sx={{marginLeft: '1rem', color: getColorWithAlpha('special', 0.5)}} >\n      <Typography variant='overline' sx={{fontSize: '0.7rem'}} >Author</Typography>\n    </Link>\n  </footer>;\n};\n\nexport default Footer;","\nimport { createTheme } from '@mui/material/styles';\n\nimport { getColorWithAlpha, getColor } from './colors';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: `${getColor()}`\n    },\n    secondary: {\n      main: `${getColor('header')}`\n    },\n    info: {\n      main: `${getColor('info')}`\n    },\n    error: {\n      main: `${getColor('err')}`\n    },\n    warning: {\n      main: `${getColor('warn')}`\n    },\n    success: {\n      main: `${getColorWithAlpha('text',0.8)}`\n    },\n    special: {\n      main: `${getColor('special')}`\n    },\n    background: {\n      main: `${getColor('background')}`\n    }\n  }\n});\n\nexport default theme;","\n// layout.jsx\n// file provides basic layout for the BitSights application\n\nimport React, { useLayoutEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider } from '@mui/material/styles';\n\nimport Header from './layout/header';\nimport Content from './layout/content';\nimport Footer from './layout/footer';\n\nimport theme from '../styles/theme';\nimport { generateID } from '../tools/id';\n\nimport { set_dr_start, set_dr_end } from '../controllers/redux/slices/date';\nimport { getDRStart, getDREnd } from '../controllers/app/daterange';\nimport { createDate, decrementByWeek } from '../tools/date';\n\nimport { useWindowSize } from '../hooks/useWindowSize';\n\nconst TheLayout = ({id}) => {\n  const { width, height } = useWindowSize();\n\n  const { daterange_end } = useSelector(state => state.dates);\n  const dispatcher = useDispatch();\n\n  useLayoutEffect(() => {\n    const drEnd = getDREnd();\n    if (!drEnd) {\n      dispatcher(set_dr_end(createDate()));\n    } else {\n      dispatcher(set_dr_end(drEnd));\n    }\n    const drStart = getDRStart();\n    if (!drStart) {\n      dispatcher(set_dr_start(decrementByWeek(daterange_end)));\n    } else {\n      dispatcher(set_dr_start(drStart));\n    }\n  });\n  \n  return <ThemeProvider theme={theme} >\n    <Box id={id} data-testid={id} sx={{\n      margin: '1rem 2rem', display: 'flex',\n      flexDirection: 'column', alignItems: 'center'}}>\n      <Header id={generateID(id, 'header')} />\n      {width < 800 && width < height ? <Typography variant='h4' color='info' >Landscape orientation required</Typography> : <Content id={generateID(id, 'content')} />}\n      <Footer id={generateID(id, 'footer')} />\n    </Box>\n  </ThemeProvider>;\n};\n\nexport default TheLayout;","import { useState, useEffect } from 'react';\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './controllers/redux/store';\n\nimport TheLayout from './components/layout';\n\nimport { APPID } from './tools/info';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <TheLayout id={APPID()}/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}